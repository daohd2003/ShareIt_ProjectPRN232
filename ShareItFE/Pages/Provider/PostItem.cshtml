@page "/provider/postItem"
@model ShareItFE.Pages.Provider.PostItemModel
@{
    ViewData["Title"] = "Post Your Item";
}
<div class="container">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["SuccessMessage"]
        </div>
    }

</div>
<script src="https://cdn.tailwindcss.com?plugins=forms"></script>
<script src="https://unpkg.com/lucide@latest"></script>

<style>
    .upload-box {
        border: 2px dashed #d1d5db;
        border-radius: 0.5rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.2s;
        text-align: center;
        position: relative;
        background-color: #f9fafb;
    }

        .upload-box:hover {
            border-color: #8b5cf6;
            background-color: #f5f3ff;
        }

    .image-container {
        position: relative;
        width: 100%;
        padding-top: 100%;
    }

        .image-container img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 0.5rem;
        }

    .remove-btn {
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
        background-color: rgba(239, 68, 68, 0.8);
        color: white;
        border-radius: 9999px;
        width: 1.5rem;
        height: 1.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        opacity: 0;
        transition: opacity 0.2s;
        z-index: 10;
    }

    .image-container:hover .remove-btn {
        opacity: 1;
    }
</style>

<div class="min-h-screen bg-gray-50">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        @if (!User.Identity.IsAuthenticated)
        {
            <div class="text-center py-20">
                <h2 class="text-2xl font-bold text-gray-900 mb-4">Please sign in</h2>
                <p class="text-gray-600">You need to be logged in to post items.</p>
                <a href="/Auth?returnUrl=/provider/postItem" class="mt-4 inline-block text-purple-600 hover:underline">Sign In</a>
            </div>
        }
        else
        {
            <div class="text-center mb-8">
                <h1 class="text-4xl font-bold text-gray-900 mb-4">Post Your Item</h1>
                <p class="text-xl text-gray-600">Share your beautiful clothing with the RentChic community</p>
            </div>

            <div class="mb-8">
                <div class="flex items-center justify-between">
                    @foreach (var step in Model.Steps)
                    {
                        <div class="flex items-center">
                            <div class="@(Model.CurrentStep >= step.Number ? "bg-purple-600 border-purple-600 text-white" : "border-gray-300 text-gray-500") flex items-center justify-center w-10 h-10 rounded-full border-2">
                                @if (Model.CurrentStep > step.Number)
                                {
                                    <i data-lucide="check" class="h-5 w-5"></i>
                                }
                                else
                                {
                                    <span class="text-sm font-semibold">@step.Number</span>
                                }
                            </div>
                            <div class="ml-3">
                                <p class="@(Model.CurrentStep >= step.Number ? "text-purple-600" : "text-gray-500") text-sm font-medium">@step.Title</p>
                                <p class="text-xs text-gray-500">@step.Description</p>
                            </div>
                            @if (step.Number < Model.Steps.Count)
                            {
                                <div class="@(Model.CurrentStep > step.Number ? "bg-purple-600" : "bg-gray-300") w-16 h-0.5 ml-4"></div>
                            }
                        </div>
                    }
                </div>
            </div>

            <div class="bg-white rounded-xl shadow-lg p-8">
                <form method="post" id="postItemForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="CurrentStep" />

                    @if (Model.CurrentStep == 1)
                    {
                        <div class="space-y-6">
                            <div><label class="block text-sm font-medium text-gray-700 mb-2">Item Title *</label><input type="text" asp-for="Product.Name" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent" /><span asp-validation-for="Product.Name" class="text-red-500 text-sm"></span></div>
                            <div><label class="block text-sm font-medium text-gray-700 mb-2">Description *</label><textarea asp-for="Product.Description" required rows="4" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"></textarea><span asp-validation-for="Product.Description" class="text-red-500 text-sm"></span></div>
                            <div><label class="block text-sm font-medium text-gray-700 mb-2">Category *</label><select asp-for="Product.Category" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"><option value="">Select a category</option>@foreach (var c in Model.Categories)
                                    {
                                        <option value="@c">@c</option>
                                    }</select><span asp-validation-for="Product.Category" class="text-red-500 text-sm"></span></div>
                            <div><label class="block text-sm font-medium text-gray-700 mb-3">Available Size *</label><div class="flex flex-wrap gap-3">@foreach (var s in Model.Sizes)
                                    {
                                        <button type="button" class="size-btn px-4 py-2 border rounded-lg font-medium transition-colors @(Model.Product.Size==s ? "border-purple-600 bg-purple-600 text-white" : "border-gray-300 text-gray-700")" data-size="@s">@s</button>
                                    }</div><input type="hidden" asp-for="Product.Size" id="selectedSizeInput" /><span asp-validation-for="Product.Size" class="text-red-500 text-sm"></span></div>
                            <div><label class="block text-sm font-medium text-gray-700 mb-2">Color</label><input type="text" asp-for="Product.Color" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent" /></div>
                        </div>
                    }

                    @if (Model.CurrentStep == 2)
                    {
                        <div id="step2-container" class="space-y-8">
                            <div>
                                <h3 class="text-lg font-semibold text-gray-900 mb-2">Primary Image</h3>
                                <p class="text-sm text-gray-600 mb-4">This is the main image shown on the homepage. (Required)</p>
                                <div id="primary-image-wrapper" class="w-full sm:w-1/2 md:w-1/3"></div>
                                <span asp-validation-for="PrimaryImageUrl" class="text-red-500 text-sm"></span>
                            </div>
                            <div>
                                <h3 class="text-lg font-semibold text-gray-900 mb-2">Secondary Images</h3>
                                <p class="text-sm text-gray-600 mb-4">These images will be visible in the product details. (Up to 4)</p>
                                <div id="secondary-images-grid" class="grid grid-cols-2 md:grid-cols-4 gap-4"></div>
                            </div>
                        </div>
                    }

                    @if (Model.CurrentStep == 3)
                    {
                        <div class="space-y-6">
                            <div class="text-center mb-6"><i data-lucide="dollar-sign" class="h-16 w-16 text-green-500 mx-auto mb-4"></i><h3 class="text-lg font-semibold text-gray-900 mb-2">Set Your Pricing</h3><p class="text-gray-600">Price competitively to attract more renters</p></div>
                            <div><label class="block text-sm font-medium text-gray-700 mb-2">Rental Price per Day *</label><div class="relative"><i data-lucide="dollar-sign" class="absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-400"></i><input type="number" asp-for="Product.PricePerDay" required class="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent" /></div><span asp-validation-for="Product.PricePerDay" class="text-red-500 text-sm"></span></div>
                            <div class="bg-green-50 border border-green-200 rounded-lg p-4"><h4 class="font-medium text-green-900 mb-2">Pricing Suggestions</h4><div class="text-sm text-green-800 space-y-1"><p>• Designer items: 8-15% of retail price per day</p><p>• Mid-range items: 5-10% of retail price per day</p></div></div>
                        </div>
                    }

                    <div class="flex justify-between pt-8 mt-8 border-t border-gray-200">
                        <button type="submit" asp-page-handler="Previous" class="px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 disabled:opacity-50" disabled="@(Model.CurrentStep == 1)">Previous</button>
                        @if (Model.CurrentStep < 3)
                        {
                            <button type="submit" asp-page-handler="Next" class="px-6 py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700">Next Step</button>
                        }
                        else
                        {
                            <button type="submit" asp-page-handler="Submit" class="px-8 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 font-semibold">Post Item</button>
                        }
                    </div>
                </form>
            </div>

          @*   @if (TempData["SuccessMessage"] != null)
            {
                <div class="mt-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg">@TempData["SuccessMessage"]</div>
            } *@
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="mt-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg">@TempData["ErrorMessage"]</div>
            }
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
        lucide.createIcons();
        $(document).ready(function () {
            $('.size-btn').on('click', function () {
                $('.size-btn').removeClass('border-purple-600 bg-purple-600 text-white').addClass('border-gray-300 text-gray-700');
                $(this).removeClass('border-gray-300 text-gray-700').addClass('border-purple-600 bg-purple-600 text-white');
                $('#selectedSizeInput').val($(this).data('size')).trigger('change');
            });

            if (@Model.CurrentStep == 2) {
                const token = $('input[name="__RequestVerificationToken"]').val();
                let primaryImageUrl = @Html.Raw(Json.Serialize(Model.PrimaryImageUrl));
                let secondaryImageUrls = @Html.Raw(Json.Serialize(Model.SecondaryImageUrls));

                function renderPrimaryImage() {
                    const wrapper = $('#primary-image-wrapper');
                    wrapper.empty();
                    if (primaryImageUrl) {
                        wrapper.html(`<div class="image-container"><img src="${primaryImageUrl}" /><div class="remove-btn" id="remove-primary-btn" title="Remove"><i data-lucide="x" class="h-4 w-4"></i></div></div>`);
                    } else {
                        wrapper.html(`<label for="primary-upload-input" class="upload-box h-48"><i data-lucide="image-plus" class="h-10 w-10 text-gray-400 mb-2"></i><span class="text-sm font-semibold text-gray-600">Add Primary Image</span><input type="file" id="primary-upload-input" class="hidden" accept="image/*" /></label>`);
                    }
                    lucide.createIcons();
                }

                function renderSecondaryImages() {
                    const grid = $('#secondary-images-grid');
                    grid.empty();
                    secondaryImageUrls.forEach((url, index) => {
                        grid.append(`<div class="image-container"><img src="${url}" /><div class="remove-btn remove-secondary-btn" data-index="${index}" title="Remove"><i data-lucide="x" class="h-4 w-4"></i></div></div>`);
                    });
                    if (secondaryImageUrls.length < 4) {
                        const remaining = 4 - secondaryImageUrls.length;
                        grid.append(`<label for="secondary-multi-upload-input" class="upload-box h-32 md:h-40"><i data-lucide="plus" class="h-8 w-8 text-gray-400"></i><span class="text-xs text-gray-500">Add up to ${remaining} more</span><input type="file" id="secondary-multi-upload-input" class="hidden" accept="image/*" multiple /></label>`);
                    }
                    lucide.createIcons();
                }

                function handleUpload(files, isPrimary) {
                    const formData = new FormData();
                    for (let i = 0; i < files.length; i++) { formData.append('imageFiles', files[i]); }
                    formData.append('isPrimary', isPrimary);

                    $.ajax({
                        url: '/provider/postItem?handler=UploadImages',
                        type: 'POST', data: formData, processData: false, contentType: false,
                        headers: { 'RequestVerificationToken': token },
                        success: (res) => {
                            if (res.success) {
                                primaryImageUrl = res.primaryUrl;
                                secondaryImageUrls = res.secondaryUrls;
                                renderPrimaryImage();
                                renderSecondaryImages();
                            } else { alert(res.message); }
                        },
                        error: (xhr) => alert('Error: ' + xhr.responseText)
                    });
                }

                $('#primary-image-wrapper').on('change', '#primary-upload-input', function () { handleUpload(this.files, true); });
                $('#secondary-images-grid').on('change', '#secondary-multi-upload-input', function () { handleUpload(this.files, false); });

                $('#primary-image-wrapper').on('click', '#remove-primary-btn', function () {
                    $.ajax({
                        url: '/provider/postItem?handler=RemovePrimaryImage', type: 'POST', headers: { 'RequestVerificationToken': token },
                        success: (res) => { if (res.success) { primaryImageUrl = null; renderPrimaryImage(); } }
                    });
                });
                $('#secondary-images-grid').on('click', '.remove-secondary-btn', function () {
                    $.ajax({
                        url: `/provider/postItem?handler=RemoveSecondaryImage&index=${$(this).data('index')}`, type: 'POST', headers: { 'RequestVerificationToken': token },
                        success: (res) => { if (res.success) { secondaryImageUrls.splice($(this).data('index'), 1); renderSecondaryImages(); } }
                    });
                });

                renderPrimaryImage();
                renderSecondaryImages();
            }
        });
    </script>
}